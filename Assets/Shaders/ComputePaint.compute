#pragma kernel Main

// Use 'R Float' as rendertexture!!! (Or R32)
RWTexture2D<float> Result;
RWStructuredBuffer<float3> MeshVertices;
StructuredBuffer<float2> MeshUvs;

int _TextureSize;
float4 _UvHit;		// Only use xy components
float _Radius;
float _BrushStrength;

[numthreads(32, 32, 1)]
void Main (uint3 id : SV_DispatchThreadID)
{
	float2 uv = id.xy / float(_TextureSize);
	float dist = distance(uv, _UvHit.xy);

	if (dist <= _Radius) {
		Result[id.xy].r += _BrushStrength;
		Result[id.xy].r = clamp(Result[id.xy].r, 0, 1);

		uint flatIndex = _TextureSize * id.y + id.x;
		uint flatArrayHeightmapsize = _TextureSize * _TextureSize;
		uint smallArraySize = 41 * 41;

		float flatPercentage = float(flatIndex) / float(flatArrayHeightmapsize);

		//if(fmod(flatIndex, ratio) < 0.07) {
			uint smallIndex = smallArraySize * flatPercentage;
			MeshVertices[smallIndex].z = -Result[id.xy].r * 6.0;
		//}
	}
}

#pragma kernel Main

// Use 'R Float' as rendertexture!!! (Or R32)
RWTexture2D<float> Result;
//RWStructuredBuffer<float3> MeshVertices;

int _TextureSize;
float4 _UvHit;		// Only use xy components
float _Falloff;
float _Radius;
float _BrushStrength;

[numthreads(32, 32, 1)]
void Main (uint3 id : SV_DispatchThreadID)
{
	float2 uv = id.xy / float(_TextureSize);
	float dist = distance(uv, _UvHit.xy);

	float att = clamp(pow(1.0 - min(0.5, dist / abs(_Radius)) * 2.0, abs(_Falloff)), 0.0, 1.0);
	att *= att;

	if(_BrushStrength > 0) {
		Result[id.xy].r += att * abs(_BrushStrength);
	} else {
		Result[id.xy].r -= att * abs(_BrushStrength);
	}
	Result[id.xy].r = clamp(Result[id.xy].r, 0, 1);

	/*uint flatIndex = _TextureSize * id.y + id.x;
	uint flatArrayHeightmapsize = _TextureSize * _TextureSize;
	uint smallArraySize = 33 * 33;

	double flatPercentage = double(flatIndex) / double(flatArrayHeightmapsize);

	uint smallIndex = smallArraySize * flatPercentage;
	MeshVertices[smallIndex].z = -Result[id.xy].r * 6.0;*/
}
